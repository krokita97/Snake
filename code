using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace snake
{
    class Program
    {
        static void Main(string[] args)
        {
            int starLen = 25;
            int[] star_x = new int[starLen];
            int[] star_y = new int[starLen];
            int deadStars = 0;
            bool[] starAlive = new bool[starLen];

            Random rand = new Random();

            for(int i=0;i<starLen;i++)
            {
                starAlive[i] = true;
                star_x[i] = rand.Next(Console.WindowWidth - 1);
                star_y[i] = rand.Next(Console.WindowHeight - 1);
                Console.SetCursorPosition(star_x[i], star_y[i]);
                Console.ForegroundColor = (ConsoleColor)1+rand.Next(15);
                Console.Write('*');
            }


            Console.CursorVisible = false;
            char snakeElement = 'o';
            char snakeHead = '@';


            int dim = 10;
            int[] snake_x = new int[dim];
            int[] snake_y = new int[dim];

            for(int i=0;i<dim;i++) // < snake_x.length
            {
                snake_x[i] = i + 1;
                snake_y[i] = 10;
                Console.SetCursorPosition(snake_x[i], snake_y[i]);
                Console.Write(snakeElement);
            }

            int head_x = snake_x[snake_x.Length - 1];//glowa weza
            int head_y = snake_y[snake_y.Length - 1];

            ConsoleKey znak = ConsoleKey.RightArrow;
            bool isNotEnd = true;
            while(isNotEnd)
            {
                if(Console.KeyAvailable)
                    znak = Console.ReadKey(true).Key;

                switch (znak)
                {
                    case ConsoleKey.LeftArrow: if(head_x>1) head_x--; break;
                    case ConsoleKey.RightArrow: if(head_x<Console.WindowWidth-1) head_x++; break;
                    case ConsoleKey.UpArrow: if(head_y>1) head_y--; break;
                    case ConsoleKey.DownArrow: if(head_y<Console.WindowHeight-1)head_y++; break;
                    default: isNotEnd = false; break;
                }

                for (int i = 0; i < starLen; i++)
                    if (head_x == star_x[i] && head_y == star_y[i] && starAlive[i] == true)
                    {
                        starAlive[i] = false;
                        deadStars++;
                        Console.SetCursorPosition(1, Console.WindowHeight - 1);
                        Console.Write("Dead stars --> {0}", deadStars);
                        Console.Beep(2000, 10);
                    }
                if (deadStars == starLen)
                    isNotEnd = false;

                Console.SetCursorPosition(snake_x[0], snake_y[0]);//ogon weza
                Console.Write(' ');//zamazujemy ogon weza

                for(int i=0;i<snake_x.Length-1;i++)
                {
                    snake_x[i] = snake_x[i + 1];
                    snake_y[i] = snake_y[i + 1];
                }

                snake_x[snake_x.Length - 1] = head_x;
                snake_y[snake_y.Length - 1] = head_y;

                for(int i=0;i<snake_x.Length-1;i++)
                {
                    Console.SetCursorPosition(snake_x[i], snake_y[i]);
                    Console.Write(snakeElement);
                }

                Console.SetCursorPosition(snake_x[snake_x.Length - 1], snake_y[snake_y.Length - 1]);
                Console.ForegroundColor = ConsoleColor.DarkRed;
                Console.Write(snakeHead);
                Console.ForegroundColor = ConsoleColor.DarkGreen;

                System.Threading.Thread.Sleep(25 +(starLen - deadStars)*20);// zalezne od gwiazdek szybkosc
            }
            string napisKoniec = "K O N I E C";
            Console.SetCursorPosition(Console.WindowWidth / 2-5, Console.WindowHeight / 2);
            Console.Write(napisKoniec);
        }
    }
}
